{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/selectbox/selectbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","console","log","monsters","map","Selectbox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAaeA,MAVf,YAA4B,IAAZC,EAAW,EAAXA,QACZ,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,cAC1E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCQTC,G,MAXE,SAAAC,GAEb,OADAC,QAAQC,IAAIF,GAER,qBAAKP,UAAU,YAAf,SAEQO,EAAMG,SAASC,KAAI,SAAAZ,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,W,MCCnDU,MARf,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC9B,OAEI,uBAAOd,UAAU,SAASe,KAAK,SAASF,YAAaA,EAAaG,SAAUF,KC2BrEG,E,kDA3Bb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAG7C,WAAU,IAAD,OACP,EAAkCE,KAAKR,MAA/BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZQ,EAAmBjB,EAASkB,QAAO,SAAA7B,GAAO,OAAIA,EAAQK,KAAKyB,cAAcC,SAASX,EAAYU,kBACpG,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWa,YAAY,kBAAkBC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAClG,cAAC,EAAD,CAAUvB,SAAUiB,W,GAtBVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.61c0bc06.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nfunction Card({ monster }) {\n    return (\n        <div className='card-container'>\n            <img src={`https://robohash.org/${monster.id}?set=set2&size=300x300`} alt='Not Found'></img>\n            <h2>{monster.name}</h2>\n            <p>{monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from '../card/card.component'\nimport './card-list.styles.css'\n\n\nconst CardList = props => {\n    console.log(props)\n    return (\n        <div className='card-list'>\n            {\n                props.monsters.map(monster => (<Card key={monster.id} monster={monster} />))\n            }\n        </div>\n    )\n}\n\nexport default CardList","import React from 'react'\nimport './selectbox.styles.css'\n\nfunction Selectbox({ placeholder, handleChange }) {\n    return (\n\n        <input className='search' type=\"search\" placeholder={placeholder} onChange={handleChange} />\n\n    )\n}\n\nexport default Selectbox\n","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component.jsx'\nimport Selectbox from './components/selectbox/selectbox.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Selectbox placeholder=\"Search Monsters\" handleChange={e => this.setState({ searchField: e.target.value })} />\n        <CardList monsters={filteredMonsters} />\n      </div >\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}